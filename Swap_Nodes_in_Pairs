# Definition for singly-linked list.
# *****************ON HOLD*****************

from typing import Optional


class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def appendLinkedList(head,ele):
    if head == None:
        head = ListNode(ele)
        return head
    else:   
        curr = head
        while curr.next:
            curr = curr.next
        curr.next = ListNode(ele)
        return head
        
class Solution:
    def swapPairs(self, head: Optional[ListNode]) -> Optional[ListNode]:
        print("You are here")
        my_list = []
        container = 0
        final_list = []
        index = 0
        while head != None:
            my_list.append(ListNode(head.val))
            index += 1
            head = head.next
        if len(my_list) == 0:
            return head
        elif len(my_list) == 1:
            return my_list[0]
        else:
            for item in range(0, len(my_list)):
                if item % 2 == 0:
                    container = ListNode(my_list[item])
                    if item == len(my_list) - 1:
                        final_list.append(ListNode(my_list[item]))
                elif item % 2 != 0:
                    final_list.append(ListNode(my_list[item]))
                    final_list.append(ListNode(container))
            print("fin")
            return head

        
        
                
        
        
        


solution = Solution()

first = ListNode(1)
second = ListNode(2)
first.next = second
third = ListNode(3)
second.next = third
fourth = ListNode(4)
third.next = fourth
fifth = ListNode(5)
fourth.next = fifth

solution.swapPairs(first)